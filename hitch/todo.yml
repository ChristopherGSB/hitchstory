- default to only allow one test run to execute at the same time on a single computer unless switched off. Is there a place to put the pid file for this?
- Make exception code yellow not red.
- HTML reports with logo file.
- postcheck -- method which checks postconditions -- if you want a test failure because some invariant went wrong, make it happen here, not in tear down, where all exceptions 
- print out a 'full' story -- with all inheritance baked in - on failures and also display line number and filename.
- Add 'required' and default arguments to GivenProperty and InfoProperty.
- when using only_uninherited, raise clearer exception when an inherited story matches but no uninherited story matches.
- Examples -- parameters via a story name (examples:)
- Story kind:
  - regular
  - stub (no given, steps but has metadata)
  - abstract (no steps - but has givem)
  - parameterized -- can run normally itself with a default variable, but also runs with multiple variables.
  - known failure (story will fail build if it passes and succeed if it fails)
  - example - stories which consisten just of
  - unimplemented - fails if it doesn't fail, doesn't fail if it does.
- Fix inheritance from 3rd story down.- Rewriting fails if it is being done on a parent story?
- Give file and line numbers to blue YAML snippets indicating failure.
- Add defaults argument to GivenProperty and InfoProperty.
- Add inherit_by argument to GivenProperty and InfoProperty.
- Add ParameterDefinition: |
    parameter_definition=ParameterDefinition(
        valid_browser=ParameterProperty(
            schema=Enum(list_of_valid_browser_name_templatess),
            validate=validate_func,  ????
            default="Firefox",
        ),
        python_2_version=ParameterProperty(
            schema=Enum(list_of_things),
            validate=validate_func,
            default="Firefox",
        ),
    )

- Strategy class / TestRunner class / Hypothesis class / TestRun class
- Counter examples -- known failures, params with a name - avoid.
- Use non-ascii characters in all tests.
- poststep method - self.poststep(self, previous_step)
- prestep method - self.prestep(self, following_step)
- group_setup(self, given_list) / group_teardown - run once when any group of stories is run. For use doing build steps and possibly starting services that take a long time to start up and can have their state reset while running. Should get all preconditions for all stories that you are planning to run.
- Reserved key words on step names (e.g. preconditions, given, anything that is a property on the story, the word 'in', etc.)
- kwargs story, demonstrate that conversion to underscore case does not happen in kwargs whereas it does in named args.
- *args story.
- debugging_hitchstory_itself() mode - do not inhibit stack traces from the framework.
