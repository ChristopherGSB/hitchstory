1) Gradual typing refactor test to make it more documentation-worthy and also include kwargs.

2) expected exceptions.

3) raise SomethingWentWrong("with message") that is always expected to replace runtime error.

4) hitchstory DEBUG mode.

5) Ctrl-C / abort / SIGTERM

6) raise exception - invalid types in schema.

7) raise exception - invalid about params - preconditions, name, description, params in about schema.


CUCUMBER COMPARISON
-------------------

http://coryschires.com/ten-tips-for-writing-better-cucumber-steps/

Why not Cucumber or other Gherkin-derived languages?
----------------------------------------------------

Cucumber was not a clearly designed language. It was more of an idea about
development that was put forward and then



Gradual typing, strong typing and does not force you to write your own mini-parser.

Strong typing
Gradual typing
Does not force you to write your own mini-parsers with regular expressions.


Why not use the Robot Framework?
--------------------------------

It was actually the first trigger that made me write the hitchdev framework. The very idea that you
could write an executable language that failed on a particular line and *wouldn't tell you which line
it failed* on implied such an epic failure of imagination that I figured that I couldn't possibly make
anything worse.


Why not write tests using python using a unit testing framework instead of this weird YAML language?
----------------------------------------------------------------------------------------------------

It seems simpler to just keep everything in the same language, but it's actually not.

A common objection to special 'test' languages is that they

Unit tests.


Why did you not use standard YAML for hitch?
--------------------------------------------

hitchtest (the precursor to hitchstory) actually did use standard YAML. StrictYAML was written
in response to its flaws. All flaws are described in the StrictYAML FAQ.
