1) When tear_down, on_success, on_failure or on_abort exception occurs.

2) Parameters should be VALUES and not YAML objects.

3) expected exceptions.

4) shouldbe, etc.

4) assert equivalents which raises always expected exceptions - assert equal, etc.

5) raise SomethingWentWrong("with message") that is equivalent to assert. 

6) hitchstory DEBUG mode.

7) Ctrl-C.

8) on failure, on success.

9) 


PARAMETERS WHICH ARE NON-STRINGS
--------------------------------

What to do about parsing:

  number of elements: (( number of elements ))
  params:
    number of elements: 4



DOCUMENTATION
-------------

Using jinja2 template, generate a story.

Somehow attach artefacts (strings, filenames) to individual steps as they are looped through
in jinja2.





CUCUMBER COMPARISON
-------------------

http://coryschires.com/ten-tips-for-writing-better-cucumber-steps/

Why not Cucumber or other Gherkin-derived languages?
----------------------------------------------------

Cucumber was not a clearly designed language. It was more of an idea about
development that was put forward and then



Gradual typing, strong typing and does not force you to write your own mini-parser.

Strong typing
Gradual typing
Does not force you to write your own mini-parsers with regular expressions.


Why not use the Robot Framework?
--------------------------------

The robot framework is a crushing, soul cleaving embarrassment dressed up as a framework.

It was actually the first trigger that made me write the hitchdev framework. The very idea that you
could write an executable language that failed on a particular line and *wouldn't tell you which line
it failed* on implied such an epic failure of imagination that I figured that I couldn't possibly make
anything worse. A burning hatred of the Robot Framework is what drove the creation of hitch.


Why not write tests using python using a unit testing framework instead of this weird YAML language?
----------------------------------------------------------------------------------------------------

It seems simpler to just keep everything in the same language, but it's actually not.

A common objection to special 'test' languages is that they

Unit tests.


Why did you not use standard YAML for hitch?
--------------------------------------------

hitchtest (the precursor to hitchstory) actually did use standard YAML. StrictYAML was written
in response to its 
