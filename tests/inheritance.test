- name: Inherit one story from another
  tags:
    - inheritance
    - documentation
    - happy
  preconditions:
    files:
      example.story: |
        Create files:
          scenario:
            - Do thing one

        Write to file:
          based on: Create files
          scenario:
            - Do thing two
  scenario:
    - Run command: |
        from hitchstory import StoryCollection, BaseEngine
        from strictyaml import Map, Str

        class Engine(BaseEngine):
            def do_thing_one(self):
                output("thing one")

            def do_thing_two(self):
                output("thing two")

        StoryCollection(".", Engine()).named("Write to file").play()
    - Output is: |
        thing one
        thing two


- name: Attempt inheritance from non-existent story
  tags:
    - inheritance
    - sad
  preconditions:
    files:
      example.story: |
        Write to file:
          based on: Create files
          scenario:
            - Do thing two
  scenario:
    - Run command: |
        from hitchstory import StoryCollection, BaseEngine
        from strictyaml import Map, Str

        class Engine(BaseEngine):
            def do_thing_one(self):
                output("thing one")

            def do_thing_two(self):
                output("thing two")

        output(StoryCollection(".", Engine()).named("Write to file").play().report())
    - Output will be: attempt inheritance from non-existent story
